{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f7996bc9",
   "metadata": {},
   "source": [
    "# Heatmap\n",
    "\n",
    "Calls seaborn heatmap with some extra tweaks.\n",
    "\n",
    "Parameters:  \n",
    "\n",
    "    df: pd.DataFrame, \n",
    "    chart_columns: list --> list of strings [] \n",
    "    row_index: str --> row column that you want to have\n",
    "    title='' --> string title\n",
    "    xlabel='' --> string x label \n",
    "    ylabel='' --> string y label \n",
    "    cluster_rows=True --> whether or not you want to cluster the rows\n",
    "    cluster_cols=True --> whether or not you want to cluster the columns\n",
    "    row_colours=None --> a list of lists [[c1, c2, .... ], []] # need a colour for each value in the datasets\n",
    "    col_colours=None, \n",
    "    vmin=None, --> limit for the hue\n",
    "    vmax=None,\n",
    "    linewidths=0.5,\n",
    "    x_tick_labels=1,\n",
    "    figsize=(3, 3), \n",
    "    title_font_size=8, \n",
    "    label_font_size=6, \n",
    "    title_font_weight=700, \n",
    "    cmap='RdBu_r', \n",
    "    annot=False, --> annotation on the top of the heatmap could be a value or a string need one for each\n",
    "    config={}\n",
    "\n",
    "    \n",
    "\n",
    "Config options = any of the parameters with the same name but with in a dictionary format instead, and also includes default parameters for the visualisation such as the font family and font.\n",
    "\n",
    "Example config:\n",
    "```\n",
    "config={'palette': ['red', 'yellow', 'pink'], \n",
    "       'figsize':(4, 5),  # Size of figure (x, y)\n",
    "        'title_font_size': 16, # Size of the title (pt)\n",
    "        'label_font_size': 12, # Size of the labels (pt)\n",
    "        'title_font_weight': 700, # 700 = bold, 600 = normal, 400 = thin\n",
    "        'font_family': 'sans-serif', # 'serif', 'sans-serif', or 'monospace'\n",
    "        'font': ['Tahoma'] # Default: Arial  # http://jonathansoma.com/lede/data-studio/matplotlib/list-all-fonts-available-in-matplotlib-plus-samples/\n",
    "}\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ef75c87",
   "metadata": {},
   "source": [
    "## Loading data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "743851b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     sepal_length  sepal_width  petal_length  petal_width           label\n",
       "0             5.1          3.5           1.4          0.2     Iris-setosa\n",
       "1             4.9          3.0           1.4          0.2     Iris-setosa\n",
       "2             4.7          3.2           1.3          0.2     Iris-setosa\n",
       "3             4.6          3.1           1.5          0.2     Iris-setosa\n",
       "4             5.0          3.6           1.4          0.2     Iris-setosa\n",
       "..            ...          ...           ...          ...             ...\n",
       "145           6.7          3.0           5.2          2.3  Iris-virginica\n",
       "146           6.3          2.5           5.0          1.9  Iris-virginica\n",
       "147           6.5          3.0           5.2          2.0  Iris-virginica\n",
       "148           6.2          3.4           5.4          2.3  Iris-virginica\n",
       "149           5.9          3.0           5.1          1.8  Iris-virginica\n",
       "\n",
       "[150 rows x 5 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from sciviso import Barchart, Boxplot, Heatmap, Histogram, Scatterplot, Violinplot, Volcanoplot, Line\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "df = pd.read_csv('iris.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "655d33b0",
   "metadata": {},
   "source": [
    "## Basic Heatmap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "bee623f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ariane/opt/miniconda3/envs/clean_ml/lib/python3.6/site-packages/seaborn/matrix.py:298: MatplotlibDeprecationWarning: Using a string of single character colors as a color sequence is deprecated since 3.2 and will be removed two minor releases later. Use an explicit list instead.\n",
      "  mesh = ax.pcolormesh(self.plot_data, cmap=self.cmap, **kws)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 216x216 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "heatmap = Heatmap(df, \n",
    "                  chart_columns=['sepal_width', 'sepal_length', 'petal_length', 'petal_width'], \n",
    "                  row_index='label')\n",
    "heatmap.plot(linecolor=\"\") # If you have too many items (like on this plot - you'll have no colour just a black \n",
    "# plot so I set the linecolor to be \"\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8abd608b",
   "metadata": {},
   "source": [
    "## Add row annotations as colour blocks\n",
    "\n",
    "Add in the colour of each class as a row label."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ee036080",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "labels = df['label'].values\n",
    "lut = dict(zip(set(labels), sns.color_palette(\"pastel\", len(set(labels)))))\n",
    "row_colors = pd.DataFrame(labels)[0].map(lut)\n",
    "df['label_2'] = labels + '_2'\n",
    "\n",
    "# Create additional row_colors here based on the values of one column as an example\n",
    "labels = df['sepal_length'].values.astype(int)\n",
    "lut = dict(zip(set(labels), sns.color_palette(\"Greens\", len(set(labels)))))\n",
    "row_colors2 = pd.DataFrame(labels)[0].map(lut)\n",
    "heatmap = Heatmap(df, \n",
    "                  chart_columns=['sepal_width', 'sepal_length', 'petal_length', 'petal_width'], \n",
    "                  row_index='label', row_colours=[row_colors, row_colors2], rows_to_colour=['label', 'label_2'],\n",
    "                  y_tick_labels=10, # How many skips before a tick on the RHS looks neater \n",
    "                 figsize=(5, 5))\n",
    "heatmap.plot(linecolor=\"\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0023dcd",
   "metadata": {},
   "source": [
    "## Advanced style options\n",
    "\n",
    "Here are some examples with extra style options."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ed12550b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x360 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Remove things like the clustering\n",
    "labels = df['label'].values\n",
    "lut = dict(zip(set(labels), sns.color_palette(\"pastel\", len(set(labels)))))\n",
    "row_colors = pd.DataFrame(labels)[0].map(lut)\n",
    "heatmap = Heatmap(df, \n",
    "                     chart_columns=['sepal_width', 'sepal_length', 'petal_length', 'petal_width'], \n",
    "                     row_index='label', \n",
    "                     title='Heatmap of IRIS', \n",
    "                     xlabel='', ylabel='',\n",
    "                     cluster_rows=False, \n",
    "                     cluster_cols=False, \n",
    "                     row_colours=[row_colors], \n",
    "                     col_colours=['red', 'yellow', 'green', 'blue'], \n",
    "                     vmin=0, \n",
    "                     vmax=10, # Setting the top and bottom of the colour scale\n",
    "                     linewidths=0.5, \n",
    "                     x_tick_labels=1,\n",
    "                     figsize=(3, 3), \n",
    "                    title_font_size=8, \n",
    "                    label_font_size=6, \n",
    "                    title_font_weight=700, \n",
    "                    cmap='Purples', \n",
    "                    annot=False,\n",
    "                    y_tick_labels=10, \n",
    "                    # Config options = any of the parameters with the same name but with in a dictionary format instead\n",
    "                     # You could also pass these as individual parameters, but it's easier to set as a dictionary\n",
    "                    # also, then you can re-use it for other charts!\n",
    "                      config={'figsize':(4, 5),  # Size of figure (x, y)\n",
    "                    'title_font_size': 16, # Size of the title (pt)\n",
    "                    'label_font_size': 12, # Size of the labels (pt)\n",
    "                    'title_font_weight': 700, # 700 = bold, 600 = normal, 400 = thin\n",
    "                    'font_family': 'sans-serif', # 'serif', 'sans-serif', or 'monospace'\n",
    "                    'font': ['Tahoma'] # Default: Arial  # http://jonathansoma.com/lede/data-studio/matplotlib/list-all-fonts-available-in-matplotlib-plus-samples/\n",
    "                  })\n",
    "heatmap.plot(linecolor=\"\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ccd584e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x360 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# DO a smaller one with an annotation\n",
    "versicolor = df[df['label'].values == 'Iris-setosa'][:10]\n",
    "labels = df['label'].values\n",
    "lut = dict(zip(set(labels), sns.color_palette(\"pastel\", len(set(labels)))))\n",
    "row_colors = pd.DataFrame(labels)[0].map(lut)\n",
    "\n",
    "# Annotate with the values -- this could be anything like a string or something\n",
    "annot = versicolor[['sepal_width', 'sepal_length', 'petal_length', 'petal_width']].values\n",
    "\n",
    "heatmap = Heatmap(versicolor, \n",
    "                     chart_columns=['sepal_width', 'sepal_length', 'petal_length', 'petal_width'], \n",
    "                     row_index='label', \n",
    "                     title='Heatmap of IRIS', \n",
    "                     xlabel='', ylabel='',\n",
    "                     cluster_rows=False, \n",
    "                     cluster_cols=False, \n",
    "                     row_colours=[row_colors], \n",
    "                     vmin=0, \n",
    "                     vmax=10, # Setting the top and bottom of the colour scale\n",
    "                     linewidths=0.5, \n",
    "                     x_tick_labels=1,\n",
    "                     figsize=(3, 3), \n",
    "                    title_font_size=8, \n",
    "                    label_font_size=6, \n",
    "                    title_font_weight=700, \n",
    "                    cmap='Purples', \n",
    "                    annot=annot,\n",
    "                    y_tick_labels=1, \n",
    "                    # Config options = any of the parameters with the same name but with in a dictionary format instead\n",
    "                     # You could also pass these as individual parameters, but it's easier to set as a dictionary\n",
    "                    # also, then you can re-use it for other charts!\n",
    "                      config={'figsize':(4, 5),  # Size of figure (x, y)\n",
    "                    'title_font_size': 16, # Size of the title (pt)\n",
    "                    'label_font_size': 12, # Size of the labels (pt)\n",
    "                    'title_font_weight': 700, # 700 = bold, 600 = normal, 400 = thin\n",
    "                    'font_family': 'sans-serif', # 'serif', 'sans-serif', or 'monospace'\n",
    "                    'font': ['Tahoma'] # Default: Arial  # http://jonathansoma.com/lede/data-studio/matplotlib/list-all-fonts-available-in-matplotlib-plus-samples/\n",
    "                  })\n",
    "heatmap.plot(linecolor=\"\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f251194b",
   "metadata": {},
   "source": [
    "## Saving\n",
    "\n",
    "Saving is the same for all plots and v simple, just make sure you specify what ending you want it to have."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ee04712b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ariane/opt/miniconda3/envs/clean_ml/lib/python3.6/site-packages/seaborn/matrix.py:298: MatplotlibDeprecationWarning: Using a string of single character colors as a color sequence is deprecated since 3.2 and will be removed two minor releases later. Use an explicit list instead.\n",
      "  mesh = ax.pcolormesh(self.plot_data, cmap=self.cmap, **kws)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = pd.read_csv('iris.csv')\n",
    "labels = df['label'].values\n",
    "lut = dict(zip(set(labels), sns.color_palette(\"pastel\", len(set(labels)))))\n",
    "row_colors = pd.DataFrame(labels)[0].map(lut)\n",
    "\n",
    "# Create additional row_colors here based on the values of one column as an example\n",
    "labels = df['sepal_length'].values.astype(int)\n",
    "lut = dict(zip(set(labels), sns.color_palette(\"Greens\", len(set(labels)))))\n",
    "row_colors2 = pd.DataFrame(labels)[0].map(lut)\n",
    "heatmap = Heatmap(df, \n",
    "                  chart_columns=['sepal_width', 'sepal_length', 'petal_length', 'petal_width'], \n",
    "                  row_index='label', \n",
    "                  rows_to_colour=['label'],\n",
    "                  cmap='YlOrBr',\n",
    "                  y_tick_labels=10, # How many skips before a tick on the RHS looks neater \n",
    "                 figsize=(5, 5))\n",
    "heatmap.plot(linecolor=\"\")\n",
    "plt.savefig('chart.svg') # .png, .pdf, .jpg\n",
    "plt.savefig('heatmap.png', dpi=300) # .png, .pdf, .jpg\n",
    "plt.savefig('chart.pdf') # .png, .pdf, .jpg"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
